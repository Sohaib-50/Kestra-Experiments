id: get_Gaditek_AD_user_2
namespace: foo

variables:
  password: <redacted>

triggers:
  - id: webhook_trigger
    type: io.kestra.plugin.core.trigger.Webhook
    key: key0

tasks:

  - id: debug_out
    type: io.kestra.plugin.core.log.Log
    message: "Username: {{ trigger.body.username }}"
    
  - id: fetch_user_details
    type: io.kestra.plugin.scripts.python.Script
    outputFiles:
      - "out.txt"
    beforeCommands:
      - pip install ldap3 > /dev/null
    script: |
      import os
      from collections import defaultdict
      import json
      from ldap3 import Server, Connection, ALL, SUBTREE

      # LDAP creds
      host = '3.123.143.202' 
      port = 636
      user_dn = 'cn=contractor,ou=IT-Admins,dc=atomsqa,dc=com'
      base_dn = 'dc=atomsqa,dc=com'
      password = '{{ vars.password }}'

      server = Server(host=host, port=port, get_info=ALL, use_ssl=True)
      conn = Connection(server, user=user_dn, password=password, auto_bind=False)

      if not conn.bind():
          print(f"Failed to bind to the server: {conn.last_error}")
          exit(1)

      search_filter = f"(&(objectClass=user)(sAMAccountName={{trigger.body.username}}))"
      attributes = [
          'cn', 'description', 'lastLogon', 'lastLogoff', 'organizationalUnitName',
          'sAMAccountName', 'userPrincipalName', 'mail', 'displayName',
          'distinguishedName', 'accountExpires', 'enabled', 'memberOf',
          'whenCreated', 'title', 'department', 'objectSid', 'objectGUID',
          'logonCount', 'badPwdCount', 'badPasswordTime', 'objectClass'
      ]
      conn.search(base_dn, search_filter, SUBTREE, attributes=attributes)

      # parse
      print(f"{len(conn.entries)} entries found")
      result = {}
      for entry in conn.entries:
          entry_dict = {}
          for attr in attributes:
            val = entry[attr]
            if not val:
              val = ""
            val = str(val)
            entry_dict[attr] = val
            print(attr, val, type(val))

          result[entry.entry_dn] = entry_dict

      conn.unbind()

      with open('out.txt', 'a') as f:
        f.write(str(json.dumps(result, indent=4)))

  # - id: send_to_camunda
  #   type: io.kestra.plugin.core.http.Request
  #   uri: "{{ vars.webhook_url }}"
  #   method: POST
  #   headers:
  #     Content-Type: application/json
  #   body: '{"id":1, "action": "open", "data":"this is my arsalanss", "level":4}'


#  curl -X POST -H "Content-Type: application/json" -d '{"username": "contractor-ldap"}' http://ec2-54-163-138-108.compute-1.amazonaws.com:8080/api/v1/executions/webhook/foo/get_Gaditek_AD_user_2/key0

